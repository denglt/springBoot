<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.orm2.user.UserDao">
  <resultMap id="BaseResultMap" type="com.springboot.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="head_photo" jdbcType="VARCHAR" property="headPhoto" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, age, sex, passwword, `role`, head_photo , create_time , create_timestamp ,zone_create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.springboot.model.User">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.springboot.model.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, `name`, age, 
      sex, password, `role`, head_photo,
      create_time , create_timestamp, zone_create_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=BIT}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{headPhoto,jdbcType=VARCHAR},
      #{createTime},#{createTimestamp},#{zoneCreateTime}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="password != null">
        passwword,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="headPhoto != null">
        head_photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="headPhoto != null">
        #{headPhoto,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.model.User">
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="password != null">
        passwword = #{passwword,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="headPhoto != null">
        head_photo = #{headPhoto,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.model.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=BIT},
      passwword = #{password,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      head_photo = #{headPhoto,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>