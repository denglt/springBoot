# Server HTTP port.

# spring boot 通过 ConfigFileApplicationListener 加载 application.yml\preperties 文件

my:
  custom:
    property: someValue

app:
  version: @server.version@   ## @server.version@  将在mvn compile的时候被pom文件中定义的<server.version>2.0.0</server.version>替换
  build:
    time: @server.build.time@


server:
  servlet:
    context-path: /springboot
    session:
      timeout:
  port: ${demo.server.port}   ## 操作系统环境变量 SERVER_PORT 的优先级别高于这儿的设置 (可使用actuator/env 进行观察 看server.port.png 结果）
  address:
  connection-timeout: 10s

test.nested: ${test.nested1}
test.nested1: ${test.nested2}
test.nested2: 获取多层nested成功

application.name: myDemo


test.value: '0200102295'
test.value2: 0200102295

# 复杂对象 必须使用 ConfigurationProperties
city:
  - 北京
  - 上海
  - 深圳
  - 南京
  - 重庆

acme:
  list:
    - name: my name
      description: my description
    - name: another name
      description: another description

  map:
    key1:
      name: my name 1
      description: my description 1

logging:
  file: D:/log/${spring.application.name}/springBootDemo.log
  level:
    root: info

#多数据库
app.datasource:
  db1:
    url: jdbc:mysql://localhost/med2?serverTimezone=Asia/Shanghai
    username: root
    password: denglt
    #url: jdbc:mysql://localhost:23306/med2?zeroDateTimeBehavior=convertToNull
    #username: med2
    #password: lineage11494
    driver-class-name: "com.mysql.jdbc.Driver"
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false   #默认 true
      maximum-pool-size: 20  # MaximumPoolSize  maxPoolSize
      minimum-idle: 5        #  MinimumIdle     minIdle

  db2:
    url: jdbc:mysql://localhost/med2?serverTimezone=Asia/Shanghai
    username: root
    password: denglt
    driver-class-name: "com.mysql.jdbc.Driver"
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false   #默认 true
      maximum-pool-size: 10  # 默认 10
spring:
  http:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  security:
    user:
      name: admin
      password: admin
      roles: ADMIN
  jta:
    enabled: false
    atomikos:
      properties:
        enable-logging: true
  datasource:
    url: jdbc:mysql://localhost/med2
    driver-class-name: "com.mysql.jdbc.Driver"
    username: root
    password: denglt2333
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 15
      auto-commit: false   #默认 true
  jdbc:
    template:
      max-rows: -1
  data:
    elasticsearch:
    #cluster-nodes: 127.0.0.1:9300
    #properties: { es.set.netty.runtime.available.processors: false }

  #CacheProperties
  cache:
    type: simple
    #type: redis
    redis:
      key-prefix: denglt

  task:
    execution:
      pool:
        core-pool-size: 1
        max-pool-size: 10
        queue-capacity: 100
        keep-alive-seconds: 60

    scheduler:
      pool:
        pool-size: 5
        thread-name-prefix: my-scheduled-pool
  session:
    store-type: none
  application:
    name: demo
org:
  springframework:
    boot:
      autoconfigure:
        security: INFO

# Actuator 监控
management:
  endpoints:
    sensitive: false
    web:
      # base-path:    # 默认：/actuator
      path-mapping:
        health: check    # 转换路径 /health -> /check
      exposure:
        include: "*"
  #             - info
  #             - info
  #             - health
  #             - metrics
  #             - httptrace
  #             - beans
  #             - env
  #             - mappings
  endpoint:
    health:
      enabled: true
      show-details: always
      status:
        #order: UP, DOWN, OUT_OF_SERVICE, UNKNOWN
        http-mapping: # 这样注册中心consul 会认为服务是健康的
          DOWN: 200
          OUT_OF_SERVICE: 200
          UNKNOWN: 200
  server:
    servlet:
      context-path:   #这种赋值的情况，会被设置为""(空串)
  health:
    defaults:
      enabled: true # 默认true
    my-health-check:
      enabled: true
    db:
      enabled: false

#  server:
#    port: 9080


#/info Endpoint
info:
  app:
    name: Spring Sample Application
    description: denglt study
    version: 1.0.0
  extend: false


######## end Actuator

mybatis.db1:
  # config-location: classpath:mybatis-Config.xml
  mapper-locations: classpath:mapper/*Dao.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl   # sql 日志

mybatis.db2:
  # config-location: classpath:mybatis-Config.xml
  mapper-locations: classpath:mapper2/*Dao.xml
  configuration:
    map-underscore-to-camel-case: true


#yml文件中支持使用三个短横线分割文档块的方式

---
spring:
  profiles: dev
acme:
  list:
    - name: my another name

