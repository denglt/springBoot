# Server HTTP port.
server:
  servlet:
    context-path: /springboot
    session:
      timeout:
  port: 8080
  address:
  connection-timeout: 10s

application.name: myDemo


# 复杂对象 必须使用 ConfigurationProperties
city:
    - 北京
    - 上海
    - 深圳
    - 南京
    - 重庆

acme:
  list:
    - name: my name
      description: my description
    - name: another name
      description: another description

  map:
    key1:
      name: my name 1
      description: my description 1

logging:
  file: /log/${spring.application.name}/springBootDemo.log
  level:
    root: info

spring:
  security:
    user:
      name: admin
      password: admin
      roles: ADMIN
  jta:
    enabled: false
    atomikos:
      properties:
        enable-logging: true
  datasource:
    url: jdbc:mysql://10.0.0.97/med2
    jdbc-url: jdbc:mysql://10.0.0.97/med2
    driver-class-name: "com.mysql.jdbc.Driver"
    username: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource
    maximum-pool-size: 30
  jdbc:
    template:
      max-rows: -1
  data:
    elasticsearch:
       cluster-nodes: 127.0.0.1:9300
       #properties: { es.set.netty.runtime.available.processors: false }

 #CacheProperties
  cache:
    type: simple
    #type: redis
    redis:
      key-prefix: denglt

  task:
    execution:
      pool:
        core-pool-size: 1
        max-pool-size: 10
        queue-capacity: 100
        keep-alive-seconds: 60

    scheduler:
      pool:
        pool-size: 5
        thread-name-prefix: my-scheduled-pool
  session:
    store-type: none
  application:
    name: demo

org:
  springframework:
    boot:
      autoconfigure:
        security: INFO

# Actuator 监控
management:
  endpoints:
    web:
      exposure:
        include: "*"
#             - info
#             - info
#             - health
#             - metrics
#             - httptrace
#             - beans
#             - env
#             - mappings
  endpoint:
    health:
      enabled: true
      show-details: always
  server:
    servlet:
      context-path:
#  server:
#    port: 9080


#/info Endpoint
info:
  app:
    name: Spring Sample Application
    description: denglt study
    version: 1.0.0
  extend: false


######## end Actuator

#yml文件中支持使用三个短横线分割文档块的方式
---
spring:
  profiles: dev
acme:
  list:
    - name: my another name

